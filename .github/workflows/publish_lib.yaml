name: Publish Library

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

permissions:
  actions: write
  contents: read
  packages: write
  pull-requests: read
  repository-projects: read
  statuses: read

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.x
      - name: Set VERSION variable from tag
        run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
      - name: Build
        run: dotnet build --configuration Release /p:Version=${VERSION}
      - name: Pack
        run: dotnet pack --configuration Release /p:Version=${VERSION} --output .
      - name: Push
        run: dotnet nuget push TehBilly.CSharp.SomeLibrary.${VERSION}.nupkg --source https://nuget.pkg.github.com/tehbilly/index.json --api-key ${GITHUB_TOKEN}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  trigger_downstream:
    runs-on: ubuntu-latest
    needs: build
    strategy: 
      matrix:
        downstream:
          - TehBilly.CSharp.SomeApp
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest
      - name: npm install @octokit/action
        run: npm install @octokit/action
      - name: trigger-downstream.js
        run: node .github/actions/trigger-downstream.mjs
        env:
          # Have to use the PAT here because the GITHUB_TOKEN doesn't have access to the downstream repo
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOWNSTREAM_REPO: ${{ matrix.downstream }}
